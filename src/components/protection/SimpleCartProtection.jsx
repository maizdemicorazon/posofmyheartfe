// src/components/cart/SimpleCartProtection.jsx

import { useEffect, useRef } from 'react';
import { useCart } from '../../context/CartContext';

/**
 * Componente simple para protecci√≥n del carrito
 * Integraci√≥n m√≠nima que se puede agregar a cualquier componente existente
 * 
 * USO: 
 * import SimpleCartProtection from './components/cart/SimpleCartProtection';
 * 
 * // En tu componente principal (App.jsx, Home.jsx, etc.)
 * <SimpleCartProtection />
 */
function SimpleCartProtection() {
  const { cart } = useCart();
  const isProtectionActive = useRef(false);

  useEffect(() => {
    // ‚úÖ Funci√≥n para manejar el evento beforeunload
    const handleBeforeUnload = (event) => {
      // Solo mostrar advertencia si hay productos en el carrito
      if (cart.length === 0) {
        return;
      }

      console.log('üö® Usuario intentando recargar p√°gina con', cart.length, 'productos en carrito');

      // Prevenir el evento por defecto
      event.preventDefault();
      
      // Mensaje personalizado (navegadores modernos pueden ignorarlo)
      const message = `Tienes ${cart.length} producto${cart.length !== 1 ? 's' : ''} en tu carrito. ¬øEst√°s seguro de que quieres recargar la p√°gina?`;
      event.returnValue = message;
      
      return message;
    };

    // ‚úÖ Registrar o desregistrar el event listener seg√∫n el estado del carrito
    if (cart.length > 0 && !isProtectionActive.current) {
      // Activar protecci√≥n
      window.addEventListener('beforeunload', handleBeforeUnload);
      isProtectionActive.current = true;
      console.log('üõ°Ô∏è Protecci√≥n de carrito ACTIVADA - Items en carrito:', cart.length);
    } else if (cart.length === 0 && isProtectionActive.current) {
      // Desactivar protecci√≥n
      window.removeEventListener('beforeunload', handleBeforeUnload);
      isProtectionActive.current = false;
      console.log('üõ°Ô∏è Protecci√≥n de carrito DESACTIVADA - Carrito vac√≠o');
    }

    // ‚úÖ Cleanup al desmontar el componente
    return () => {
      if (isProtectionActive.current) {
        window.removeEventListener('beforeunload', handleBeforeUnload);
        isProtectionActive.current = false;
      }
    };
  }, [cart.length]); // Dependencia: solo el length del carrito

  return null;
}

export default SimpleCartProtection;
